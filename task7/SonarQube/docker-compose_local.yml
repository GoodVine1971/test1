version: "3.2"
services:
  jenkins:
    build: 
      context: .
      dockerfile: Dockerfile
#    image: jenkinsci/jenkins:lts
    container_name: jenkins
#    restart: always
    ports:
      - "8080:8080"
#      - '50000:50000'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:rw'
      - '/data/jenkins/jenkins_home:/var/jenkins_home:rw'
      - '/usr/bin/docker:/usr/bin/docker'
    environment:
      - "JENKINS_OPTS=--prefix=/jenkins"

  sonarqube:
    image: sonarqube:7.9.6-community
    container_name: sonar
    depends_on:
      - db
#       restart: always
    networks:
      - jenkins
    environment:
      - SONARQUBE_JDBC_USERNAME=sonar
      - SONARQUBE_JDBC_PASSWORD=sonar
      - SONARQUBE_JDBC_URL=jdbc:postgresql://db:5432/sonarqube
    ports:
      - "9000:9000"
      - "9092:9092"
    volumes:
      - '/data/sonar/sonarqube_conf:/opt/sonarqube/conf'
      - '/data/sonar/sonarqube_data:/opt/sonarqube/data'
      - '/data/sonar/sonarqube_extensions:/opt/sonarqube/extensions'
      - '/data/sonar/sonarqube_bundled-plugins:/opt/sonarqube/lib/bundled-plugins'
#      - 'sonarqube_logs:/opt/sonarqube/logs'
  db:
    image: postgres:12.1
    container_name: postgres
#    restart: always
    networks:
      - jenkins
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
      - POSTGRES_DB=sonarqube
    volumes:
      - '/data/postgresql/sonarqube_db:/var/lib/postgresql'
      - '/data/postgresql/postgresql_data:/var/lib/postgresql/data'
 
networks:
  jenkins:
    driver: bridge
    
#volumes:
#  sonarqube_data:
#  sonarqube_extensions:
#  sonarqube_logs:
#  sonarqube_conf: